// #include <layout_shift.dtsi>

#include <layout_shift_kp_override.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define DEF 0
#define FUNC 1
#define NUM 2
#define MOUSE 3
#define SCROLL 4
#define BT 5
#define AppCange 6
#define WindowSnap 7

&mt {
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        CA {
            bindings = <&kp LC(A)>;
            key-positions = <12 13>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <21 22>;
        };

        cz {
            bindings = <&kp LC(Z)>;
            key-positions = <24 25>;
        };

        henkan {
            bindings = <&kp INT_HENKAN>;
            key-positions = <9 10>;
        };

        muhenkan {
            bindings = <&kp INT_MUHENKAN>;
            key-positions = <1 2>;
        };

        cy {
            bindings = <&kp LC(Y)>;
            key-positions = <0 1>;
        };
    };

    macros {
        cavve: cavve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(V)) &kp V &kp E>;
            label = "CAVVE";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
        
        kt_on: key_toggle_on_only {
            compatible = "zmk,behavior-key-toggle";
            #binding-cells = <1>;
            display-name = "Key Toggle On";
            toggle-mode = "on";
        };

        kt_off: key_toggle_off_only {
            compatible = "zmk,behavior-key-toggle";
            #binding-cells = <1>;
            display-name = "Key Toggle Off";
            toggle-mode = "off";
        };
    };

    layer_listeners {
        compatible = "zmk,layer-listeners";

        release_alt {
            layers = <AppCange>;
            bindings = <&kt_on LEFT_ALT &kt_off LEFT_ALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Def";
            bindings = <
&kp Q               &kp W      &kp E          &kp R     &kp T        &kp LC(W)              &kp LA(F4)                &kp Y            &kp U      &kp I           &kp O       &kp P
&mt LCTRL A         &kp S      &kp D          &kp F     &kp G        &kp LC(PAGE_DOWN)      &kp LA(LC(TAB))           &kp H            &kp J      &mt LEFT_WIN K  &kp L       &lt 3 MINUS
&mt LEFT_SHIFT Z    &kp X      &kp C          &kp V     &kp B        &kp LC(PAGE_UP)        &kp LS(LA(LC(TAB)))       &kp N            &kp M      &kp COMMA       &kp DOT     &lt 4 FSLH
&mt LEFT_ALT LC(C)  &kp LC(V)  &cavve                   &lt 4 SPACE  &lt 2 DELETE           &mt LEFT_SHIFT BACKSPACE  &mt LCTRL ENTER             &kp LS(N8)      &kp LS(N9)  &lt 5 SINGLE_QUOTE
&kp LEFT            &kp UP     &kp LG(LS(S))  &kp DOWN  &kp RIGHT                                                     &kp HOME         &kp PG_UP  &kp ESCAPE      &kp PG_DN   &kp END
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        function_layer {
            label = "Fnc";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp F11  &kp F12  &trans  &trans  &trans   &trans
&trans  &trans  &trans          &trans  &trans      &trans   &trans           &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans                       &trans   &trans  &trans  &trans   &trans
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp LS(N1)           &kp LS(N2)         &kp LS(N3)         &kp LS(N4)     &kp LS(N5)        &trans      &trans      &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS
&kp LS(N6)           &kp LS(N7)         &kp DOUBLE_QUOTES  &kp EQUAL      &kp LEFT_BRACKET  &trans      &trans      &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS
&kp INTERNATIONAL_1  &kp RIGHT_BRACKET  &kp NUHS           &kp SEMICOLON  &kp INT3          &trans      &trans      &trans           &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans
&trans               &trans             &trans                            &trans            &trans      &kp KP_DOT  &kp KP_N0                   &trans     &trans     &kp SINGLE_QUOTE
&trans               &trans             &trans             &trans         &trans                                    &trans           &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        mouse_layer {
            label = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB4  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1  &trans    &trans    &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans              &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        scroll_layer {
            label = "Scr";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB4  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1  &trans    &trans    &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans              &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        bt_layer {
            label = "BT";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans            &trans          &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans            &trans          &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans                      &trans        &trans            &trans          &trans          &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans                                          &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down &scroll_up_down>;
        };

        AppCange {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans          &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp &kp TAB &kp LS(TAB)>;
        };

        WindowSnap {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans  &trans      &trans  &trans          &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
